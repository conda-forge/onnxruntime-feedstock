{% set name = "onnxruntime" %}
{% set version = "1.12.1" %}


package:
  name: {{ name|lower }}{{ suffix }}
  version: {{ version }}

source:
  - url: https://github.com/microsoft/onnxruntime/archive/refs/tags/v{{ version }}.tar.gz
    sha256: 302e5a0f368c7d048a9acd1227ac226148ed9c944f8b67d1077ca1b3bb3dcc5b
    patches:
      - 0001_dont_vectorize.patch
      - 0002_use_system_nsync.patch
  - url: https://github.com/onnx/onnx/archive/f7ee1ac60d06abe8e26c9b6bbe1e3db5286b614b.tar.gz
    sha256: 0624860bc300fada6c0f2b5fd18043528bd0e149aad9b3c329d478ab185f17d3
    folder: onnx
  - url: https://gitlab.com/libeigen/eigen/-/archive/d10b27fe37736d2944630ecd7557cefa95cf87c9/eigen-d10b27fe37736d2944630ecd7557cefa95cf87c9.tar.gz
    sha256: a3c10a8c14f55e9f09f98b0a0ac6874c21bda91f65b7469d9b1f6925990e867b
    folder: eigen
  - url: https://github.com/pytorch/cpuinfo/archive/5916273f79a21551890fd3d56fc5375a78d1598d.zip
    sha256: 2a160c527d3c58085ce260f34f9e2b161adc009b34186a2baf24e74376e89e6d
    folder: pytorch_cpuinfo
  - url: https://github.com/nlohmann/json/archive/refs/tags/v3.10.5.tar.gz
    sha256: 5daca6ca216495edf89d167f808d1d03c4a4d929cef7da5e10f135ae1540c7e4
    folder: json
build:
  number: 1
  skip: true  # [win]
  # Since 1.11, power9 seems to be required.
  skip: true  # [ppc64le]
  ignore_run_exports_from:
    - libprotobuf

requirements:
  build:
    - python                                 # [build_platform != target_platform]
    - cross-python_{{ target_platform }}     # [build_platform != target_platform]
    - numpy                                  # [build_platform != target_platform]
    - pybind11                               # [build_platform != target_platform]
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - cmake
    - ninja
    - libprotobuf 3.19.1
  host:
    - python
    - pip
    - wheel
    - boost_mp11
    - flake8
    - flatbuffers !=2.0.6
    - gmock
    - gtest
    - libdate
    - python-flatbuffers
    - re2
    - optional-lite
    - nsync
    - libprotobuf 3.19.1
    # We need to statically link protobuf until we link against a system libonnx
    # See: https://github.com/conda-forge/onnxruntime-feedstock/issues/5
    - libprotobuf-static 3.19.1
    - numpy
    - pybind11
    - safeint
  run:
    - coloredlogs
    - packaging
    - protobuf
    - python
    - python-flatbuffers
    - sympy
    - {{ pin_compatible('numpy') }}
  run_constrained:
    - onnxruntime <0a0  # [suffix == "-novec"]

test:
  imports:
    - onnxruntime
  commands:
    - pip check
  requires:
    - pip

outputs:
  - name: {{ name|lower }}{{ suffix }}
  - name: {{ name|lower }}{{ suffix }}-cpp
    script: install-cpp.sh
    requirements:
      run:
        - protobuf
        - {{ pin_compatible('re2') }}
      run_constrained:
        - onnxruntime-cpp <0a0  # [suffix == "-novec"]
    test:
      requires:
        - {{ compiler('cxx') }}
      files:
        - test.cpp
      commands:
        - $CXX $CXXFLAGS -I$PREFIX/include/ -L$PREFIX/lib/ -lonnxruntime test.cpp                               # [linux]
        - $CXX $CXXFLAGS -I$PREFIX/include/ -L$PREFIX/lib/ -lonnxruntime -Wl,-rpath,$CONDA_PREFIX/lib test.cpp  # [osx]
        - ./a.out

about:
  home: https://github.com/microsoft/onnxruntime/
  summary: cross-platform, high performance ML inferencing and training accelerator
  license: MIT
  license_file:
    - LICENSE
    - cmake/external/onnx/LICENSE

extra:
  recipe-maintainers:
    - xhochy
    - janjagusch
    - jtilly
