{% set name = "onnxruntime" %}
{% set cuda_enabled = cuda_compiler_version != "None" %}
{% set build_ext = "cuda" if cuda_enabled else "cpu" %}
{% set version = "1.7.2" %}


package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  - url: https://github.com/microsoft/onnxruntime/archive/refs/tags/v1.7.2.tar.gz
    sha256: ef0135c49922d854b2d1ccac3759d7baf895df537c5f15386ce49fe2430ac688
    patches:
      - 0001-Use-more-system-libraries.patch
  - url: https://github.com/onnx/onnx/archive/971632833036c576cf95499291f689f8bb3519e1.zip
    sha256: 340999131688d6ab7a7939df587057cc9e49d326fc112ff65b58e121a0afad92
    folder: onnx
  - url: https://gitlab.com/libeigen/eigen/-/archive/d10b27fe37736d2944630ecd7557cefa95cf87c9/eigen-d10b27fe37736d2944630ecd7557cefa95cf87c9.tar.gz
    sha256: a3c10a8c14f55e9f09f98b0a0ac6874c21bda91f65b7469d9b1f6925990e867b
    folder: eigen

build:
  number: 2
  skip: true  # [win]
  string: py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}_{{ build_ext }}
  track_features:
    {{ "- onnxruntime-cuda" if cuda_enabled else "" }}

requirements:
  build:
    - python                                 # [build_platform != target_platform]
    - cross-python_{{ target_platform }}     # [build_platform != target_platform]
    - numpy                                  # [build_platform != target_platform]
    - pybind11                               # [build_platform != target_platform]
    - {{ compiler('c') }}
    - {{ compiler('cxx') }}
    - {{ compiler("cuda") }}  # [cuda_compiler_version != "None"]
    - cmake
    - ninja
    - libprotobuf
  host:
    - python
    - pip
    - wheel
    - cub    # [cuda_compiler_version != "None"]
    - cudnn  # [cuda_compiler_version != "None"]
    - boost_mp11
    - flake8
    - flatbuffers
    - gmock
    - gtest
    - libdate
    - python-flatbuffers
    - re2
    - optional-lite
    - nsync
    - nlohmann_json
    - libprotobuf
    # We need to statically link protobuf until we link against a system libonnx
    # See: https://github.com/conda-forge/onnxruntime-feedstock/issues/5
    - libprotobuf-static
    - numpy
    - pybind11
    - safeint
  run:
    - python
    - {{ pin_compatible('numpy') }}
    - protobuf

test:
  imports:
    - onnxruntime
  commands:
    - pip check
  requires:
    - pip

about:
  home: https://github.com/microsoft/onnxruntime/
  summary: cross-platform, high performance ML inferencing and training accelerator
  license: MIT
  license_file:
    - LICENSE
    - cmake/external/onnx/LICENSE

extra:
  recipe-maintainers:
    - xhochy
